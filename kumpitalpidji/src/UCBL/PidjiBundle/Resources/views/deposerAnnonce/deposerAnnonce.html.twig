{% extends "UCBLPidjiBundle::layout.html.twig" %}

{% block titre %}
    Deposer Annonce - {{ parent() }}
{% endblock %}

{% block contenuPrincipal %}
   <div class="container" style="margin-top: 5%;">

       <h3>Deposer mon annonce</h3>

       <div class="well">
           {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

           {# Les erreurs générales du formulaire. #}
           {{ form_errors(form) }}

           {# Génération manuelle et éclatée : #}
           {# Categories #}
           <div class="form-group">
               {{ form_label(form.categories, " Categories *", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
               {{ form_errors(form.categories) }}
               <div class="col-sm-4">
                   {{ form_widget(form.categories, {'attr': {'class': 'form-control'}}) }}
               </div>
           </div>

           <div class="form-group">
               {{ form_label(form.types, " Types *",{'label_attr': {'class': 'col-sm-2 control-label'}}) }}
               {{ form_errors(form.types) }}
               <div class="col-sm-4">
                   {{form_widget(form.types) }}
               </div>
           </div>



           <div class="form-group">
               {# Génération du label. #}
               {{ form_label(form.titre, "Titre de l'Annonce *", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}

               {# Affichage des erreurs pour ce champ précis. #}
               {{ form_errors(form.titre) }}

               <div class="col-sm-4">
                   {# Génération de l'input. #}
                   {{ form_widget(form.titre, {'attr': {'class': 'form-control'}}) }}
               </div>
           </div>

           {# Idem pour un autre champ. #}
           <div class="form-group">
               {{ form_label(form.description, "Description de l'Annonce *", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
               {{ form_errors(form.description) }}
               <div class="col-sm-4">
                   {{ form_widget(form.description, {'attr': {'class': 'form-control', 'rows': '7'}}) }}
               </div>
           </div>

           {# Idem pour un autre champ. #}
           <div class="form-group">
               {{ form_label(form.prix, "Prix ", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
               {{ form_errors(form.prix) }}
               <div class="col-sm-4">
                   {{ form_widget(form.prix, {'attr': {'class': 'form-control'}}) }}
               </div>
           </div>

           <div class="form-group">
               {{ form_label(form.images, "Image ", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
               {{ form_errors(form.images) }}
               <div class="col-sm-4">
                   <a href="#" id="add_category" class="btn btn-info"><i class="fa fa-plus"></i> Ajouter une image</a>

                   {{ form_widget(form.images, {'attr': {'class': ''}}) }}
               </div>
           </div>


           {# Pour le bouton, pas de label ni d'erreur, on affiche juste le widget#}
           {{ form_widget(form.Valider, {'attr': {'class': 'btn btn-primary'}}) }}




           {# Génération automatique des champs pas encore écrits.
              Dans cet exemple, ce serait le champ CSRF (géré automatiquement par Symfony !)
              et tous les champs cachés (type « hidden »). #}
           {{ form_rest(form) }}

           {# Fermeture de la balise <form> du formulaire HTML #}
           {{ form_end(form) }}
       </div>
   </div>
{% endblock %}


{% block js %}
 {{ parent() }}
    {# Le formulaire reste globalement le même,

    {# On charge la bibliothèque jQuery. Ici, je la prends depuis le CDN google
       mais si vous l'avez en local, changez simplement l'adresse. #}
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

    {# Voici le script en question : #}
    <script type="text/javascript">

        $(document).ready(function() {
            // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
            var $container = $('div#ucbl_pidjibundle_annonce_images');

            // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
            var index = $container.find(':input').length;

            // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
            $('#add_category').click(function(e) {
                addCategory($container);

                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                return false;
            });

            // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle Annonce par exemple).
                // S'il existe déjà des catégories, on ajoute un lien de suppression pour chacune d'entre elles
                $container.children('div').each(function() {
                    addDeleteLink($(this));
                });

            // La fonction qui ajoute un formulaire CategoryType
            function addCategory($container) {
                // Dans le contenu de l'attribut « data-prototype », on remplace :
                // - le texte "__name__label__" qu'il contient par le label du champ
                // - le texte "__name__" qu'il contient par le numéro du champ
                var template = "<div class=\"form-group\"><label class=\"control-label required text-center control-label\">__name__label__</label><div id=\"ucbl_pidjibundle_annonce_images___name__\" class=\"row\"><div class=\"form-group col-sm-12\"><input type=\"file\" id=\"ucbl_pidjibundle_annonce_images___name___imageFile\" name=\"ucbl_pidjibundle_annonce[images][__name__][imageFile]\" required=\"required\" class=\"form-control\" accept=\"image/*\" /></div></div></div>"
                    .replace(/__name__label__/g, 'Image n°' + (index+1))
                    .replace(/__name__/g,        index)
                ;

                // On crée un objet jquery qui contient ce template
                var $prototype = $(template);

                // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
                addDeleteLink($prototype);

                // On ajoute le prototype modifié à la fin de la balise <div>
                $container.append($prototype);

                // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
                index++;
            }

            // La fonction qui ajoute un lien de suppression d'une catégorie
            function addDeleteLink($prototype) {
                // Création du lien
                var $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');

                // Ajout du lien
                $prototype.append($deleteLink);

                // Ajout du listener sur le clic du lien pour effectivement supprimer la catégorie
                $deleteLink.click(function(e) {
                    $prototype.remove();

                    e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                    return false;
                });
            }
        });
    </script>
{% endblock %}